---
# Source: service-broker/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-service-broker
  namespace: default
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "release-name"
    heritage: "Tiller"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-broker
      release: release-name
  template:
    metadata:
      labels:
        chart: "service-broker-0.3.1"
        app: "service-broker"
        release: "release-name"
        heritage: "Tiller"
    spec:
      serviceAccountName: release-name-service-broker
      containers:
      - name: broker
        image: "appscode/service-broker:0.3.1"
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --logtostderr
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        - --catalog-path=/etc/config/catalog
        - --catalog-names="kubedb"
        - --defaultNamespace=default
        ports:
        - containerPort: 8443
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
        resources:
          {}
          
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        - mountPath: /etc/config/catalog/kubedb
          name: kubedb-volume
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: release-name-service-broker-apiserver-cert
      - name: kubedb-volume
        configMap:
          name: kubedb
          # defaultMode: 511
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
        
